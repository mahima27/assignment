name: CI
on:
 workflow_dispatch:
 push:
   branches:
     - main

jobs:
  Build:
    runs-on: self-hosted
    steps:
      - name: checkout-code
        uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@master
        with:
          node-version: ${{ vars.NODE_VERSION }}

      - name: Build 
        shell: bash
        run: |
          npm install
          ls

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v5.2.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_URL }}
        with:
          args: >
            -Dsonar.qualitygate.wait=true
            -Dsonar.projectVersion=1.0
            -Dsonar.projectKey=hello-world
            -Dsonar.projectName=hello-world
        continue-on-error: ${{ vars.SONAR_BREAK_BUILD }}

  Image-Build:
    runs-on: ubuntu-latest
    needs: Build
    steps: 
      - name: checkout-code
        uses: actions/checkout@v2

      - name: Login to Docker Registry
        uses: docker/login-action@v1
        with:
          registry: docker.io
          username: ${{ vars.docker_username }}
          password: ${{ secrets.docker_pwd }}

      - name: Build Image
        shell: bash
        run: docker build -t docker.io/${{ vars.docker_username }}/${{ github.event.repository.name }}:${{ github.run_id }} .

      - name: Push Image to Registry
        shell: bash
        run: docker push docker.io/${{ vars.docker_username }}/${{ github.event.repository.name }}:${{ github.run_id }}
        
     
      
  
